<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2010 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for the anchor button on a Spark ComboBox component.  

    @see spark.components.ComboBox        
    @see spark.skins.spark.ComboBoxSkin
    
    @langversion 3.0
    @playerversion Flash 10
    @playerversion AIR 1.5
    @productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
             xmlns:fb="http://ns.adobe.com/flashbuilder/2009" minWidth="19" minHeight="23">
    
    <fx:Metadata>
        <![CDATA[ 
        /** 
        * @copy spark.skins.spark.ApplicationSkin#hostComponent
        */
        [HostComponent("spark.components.Button")]
        ]]>
    </fx:Metadata> 
    
    <fx:Script fb:purpose="styling">
        /* Define the skin elements that should not be colorized. 
        For dropDownList buttons, the graphics are colorized but the arrow is not. */
        static private const exclusions:Array = ["arrow"];
        
        private var cornerRadius:Number = 0;
        
        /** 
         * @private
         */     
        override public function get colorizeExclusions():Array {return exclusions;}
        
        /* Define the symbol fill items that should be colored by the "symbolColor" style. */
        static private const symbols:Array = ["arrowFill1", "arrowFill2"];
        
        /**
         * @private 
         */
        override public function get symbolItems():Array {return symbols};
        
        /**
         * @private
         */
        override protected function initializationComplete():void
        {
            useChromeColor = true;
            super.initializationComplete();
        }
        
        /**
         *  @private
         */
        override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
        {
            /* var cr:Number = getStyle("cornerRadius");
            
            if (cornerRadius != cr)
            {
                cornerRadius = cr;
                fill.bottomRightRadiusX = fill.topRightRadiusX = cornerRadius;
                lowlight.bottomRightRadiusX = lowlight.topRightRadiusX = cornerRadius;
                highlight.bottomRightRadiusX = highlight.topRightRadiusX = cornerRadius;
                border.bottomRightRadiusX = border.topRightRadiusX = cornerRadius;
            }
            
            if (highlightStroke) 
                highlightStroke.bottomRightRadiusX = highlightStroke.topRightRadiusX = cornerRadius;
            if (hldownstroke1)
                hldownstroke1.bottomRightRadiusX = hldownstroke1.topRightRadiusX = cornerRadius;
            if (hldownstroke2)
                hldownstroke2.bottomRightRadiusX = hldownstroke2.topRightRadiusX = cornerRadius; */
            
            super.updateDisplayList(unscaledWidth, unscaledHeight);
        }
    </fx:Script>
    
    <!-- states -->
    <s:states>
        <s:State name="up" />
        <s:State name="over" />
        <s:State name="down" />
        <s:State name="disabled" />
    </s:states>
    
    <!-- layer 1: fill -->
    <s:Rect id="lightRect" left="0" right="0" top="0" bottom="0">
        <s:stroke>
            <s:SolidColorStroke color="#ffffff" caps="none" joints="miter" miterLimit="4" weight="1" 
                                alpha="0.1" alpha.down="0.15" alpha.disabled="0.05"/>
        </s:stroke>
    </s:Rect>
    
    <s:Rect top="1" bottom="1" right="1" left="1" id="innerRect">
        <s:stroke>
            <s:SolidColorStroke weight="1" caps="none" miterLimit="4" joints="miter" color="#000000" alpha="0.6"/>
        </s:stroke>
    </s:Rect>
    
    <s:Rect id="innerLightRect" top="2" right="2" left="2" bottom="2">
        <s:fill>
            <s:LinearGradient rotation="90">
                <s:GradientEntry color="#ffffff" color.over="#ffffff" color.down="#ffffff" color.disabled="#000000"
                                 alpha="0.1" alpha.over="0.15" alpha.down="0.05" alpha.disabled="0.3"
                                 ratio="0"/>
                <s:GradientEntry color="#ffffff" color.over="#ffffff" color.down="#ffffff" color.disabled="#000000"
                                 alpha="0.0" alpha.over="0.05" alpha.down="0.0" alpha.disabled="0.3"
                                 ratio="1"/>
            </s:LinearGradient>
        </s:fill>
    </s:Rect>
    
    <s:Rect id="innerLightStroke" top="2" right="2" left="2" bottom="2">
        <s:stroke>
            <s:LinearGradientStroke weight="1" caps="none" miterLimit="4" joints="miter" rotation="90">
                <s:GradientEntry color="#ffffff" color.down="#000000" color.disabled="#ffffff"
                                 alpha="0.08" 
                                 ratio="0" alpha.down="0.2" alpha.disabled="0.05"/>
                <s:GradientEntry color="#ffffff" alpha="0.03" ratio="1" ratio.down="1" color.down="#000000" alpha.down="0.1" color.disabled="#ffffff" alpha.disabled="0.05"/>
            </s:LinearGradientStroke>
        </s:stroke>
    </s:Rect>
    
    <!-- layer 7: arrow -->
    <!--- The arrow graphic displayed in the anchor button. -->
    <s:Path right="6" verticalCenter="0" id="arrow"
            data="M 4.0 4.0 L 4.0 3.0 L 5.0 3.0 L 5.0 2.0 L 6.0 2.0 L 6.0 1.0 L 7.0 1.0 L 7.0 0.0 L 0.0 0.0 L 0.0 1.0 L 1.0 1.0 L 1.0 2.0 L 2.0 2.0 L 2.0 3.0 L 3.0 3.0 L 3.0 4.0 L 4.0 4.0">
        <s:fill>
            <s:RadialGradient rotation="90" focalPointRatio="1">
                <!--- 
                    @private
                    The first part of the arrow's gradient fill. 
                    The default alpha is .6. The default color if 0x000000.
                -->
                <s:GradientEntry id="arrowFill1" color="0" 
                                 alpha=".6" alpha.over="1.0" alpha.down=".6" alpha.disabled=".5"/>
                <!--- 
                    @private 
                    The second part of the arrow's gradient fill. 
                    The default alpha is .6. The default color if 0x000000.
                -->
                <s:GradientEntry id="arrowFill2" color="0" 
                                 alpha=".6" alpha.over="1.0" alpha.down=".6" alpha.disabled=".5"/>
            </s:RadialGradient>
        </s:fill>
    </s:Path>
</s:SparkSkin>
