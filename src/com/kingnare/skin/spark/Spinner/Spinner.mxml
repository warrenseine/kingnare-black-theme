<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for the Spark Spinner component. The skins for the down and up buttons on the
Spinner component are defined by the SpinnerDecrementButtonSkin and SpinnerIncrementButtonSkin classes, respectively.  

     @see spark.components.Spinner
     @see spark.skins.spark.SpinnerDecrementButtonSkin
     @see spark.skins.spark.SpinnerIncrementButtonSkin
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
    xmlns:fb="http://ns.adobe.com/flashbuilder/2009" alpha.disabled="0.5" minHeight="23" minWidth="12">

    <fx:Metadata>
    <![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.Spinner")]
    ]]>
    </fx:Metadata> 
    
    <fx:Script fb:purpose="styling">
        /* Define the skin elements that should not be colorized. 
           For spinner, the skin itself is colorized but the individual parts are not. */
        static private const exclusions:Array = ["decrementButton", "incrementButton"];

        /**
         * @private
         */   
        override public function get colorizeExclusions():Array {return exclusions;}
        
        /**
         * @private
         */
        override protected function initializationComplete():void
        {
            useChromeColor = true;
            super.initializationComplete();
        }
        
        private var cornerRadiusChanged:Boolean;
        
        /**
         *  @private
         */
        override protected function commitProperties():void
        {
            super.commitProperties();
            
            if (cornerRadiusChanged)
            {
                var cr:Number = getStyle("cornerRadius");
                if (incrementButton)
                    incrementButton.setStyle("cornerRadius", cr);
                if (decrementButton)
                    decrementButton.setStyle("cornerRadius", cr);
            }
        }
        
        /**
         *  @private
         */
        override public function styleChanged(styleProp:String):void
        {
            var allStyles:Boolean = !styleProp || styleProp == "styleName";

            super.styleChanged(styleProp);
            
            if (allStyles || styleProp == "cornerRadius")
            {
                cornerRadiusChanged = true;
                invalidateProperties();
            }
        }
    </fx:Script>
    
    <s:states>
        <s:State name="normal" />
        <s:State name="disabled" />
    </s:states>
    
    <!--- The default skin class is SpinnerIncrementButtonSkin.
            @copy spark.components.Spinner#incrementButton
            @see spark.skins.spark.SpinnerIncrementButtonSkin -->
    <s:Button id="incrementButton" left="0" right="0" top="0" height="50%" tabEnabled="false" 
            skinClass="com.kingnare.skin.spark.Spinner.SpinnerIncrementButtonSkin" /> 
            
    <!--- The default skin class is SpinnerDecrementButtonSkin. 
            @copy spark.components.Spinner#decrementButton
            @see spark.skins.spark.SpinnerDecrementButtonSkin -->
    <s:Button id="decrementButton" left="0" right="0" bottom="0" height="50%" tabEnabled="false"  
            skinClass="com.kingnare.skin.spark.Spinner.SpinnerDecrementButtonSkin" />

</s:SparkSkin>
